import React, { useState } from 'react'
import Input from '../../input/Input'
import Button from '../../button/Button'
import styles from './login-page.module.css'
import { loginValidationRules, passwordValidationRules } from '../../utils/validation-rules'
import PasswordInput from '../../password-input/PasswordInput'
import { useNavigate } from 'react-router-dom'
import { useAuth } from '../../../hooks/useAuth'


const LoginPage = () => {
    const navigate = useNavigate();
    const { login, isLoading } = useAuth();
    const [loginValue, setLoginValue] = useState<string>('');
    const [password, setPassword] = useState<string>('');
    const [formError, setFormError] = useState<string>('');

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setFormError('');

        try {
            if (!loginValue.trim() || !password.trim()) {
                setFormError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
                return;
            }

            const response = await login({
                login: loginValue,
                password: password
            });

            if (response.token) {
                localStorage.setItem('token', response.token);
                navigate('/main');
            }
        } catch (err: any) {
            setFormError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ');
            console.error('–û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞:', err);
        }
    };


    return (
        <div className={styles.container} >
            <h1 className={styles.title}>–í—Ö–æ–¥</h1>
            <p className={styles.logo}>–õ–∏—Å—Ç–∞–πüçÉ–ó–Ω–∞–π</p>
            <h2 className={styles.sub_title}>–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!</h2>
            <Input
                value={loginValue}
                title='–õ–æ–≥–∏–Ω'
                onChange={(e) => setLoginValue(e.target.value)}
                placeholder='–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω'
                validationRules={loginValidationRules}
                required
                error={formError}
            />
            <PasswordInput
                title='–ü–∞—Ä–æ–ª—å'
                value={password}
                placeholder='–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å'
                onChange={(e) => setPassword(e.target.value)}
                validationRules={passwordValidationRules}
                required
            />
            <div className={styles.buttons_container}>
                <Button onClick={handleSubmit} width='large' text={isLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞' : '–î–∞–ª–µ–µ'} disabled={isLoading} />

            </div>
            <a className={styles.password_revocery_link} href='/recovery-password'>–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</a>
            <div className={styles.away_container}>
                <p className={styles.not_register}>–£ –≤–∞—Å –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?</p>
                <a href='/register' className={styles.goto_register}>–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</a>
            </div>


        </div>
    )
}

export default LoginPage
